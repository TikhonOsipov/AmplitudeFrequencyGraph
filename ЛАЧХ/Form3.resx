<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>