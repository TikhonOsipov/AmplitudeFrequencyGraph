<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        R0lGODlhFAQiAIMAAP///wAAAHZ2diIiIlRUVDIyMkRERJiYmLq6utzc3BAQEGZmZu7u7qqqqszMzIiI
        iCH/C05FVFNDQVBFMi4wAwEBAAAh+QQBAAAAACwAAAAAFAQiAAAI/wABCBxIsKDBgwgTKlzIsKHDhxAj
        SpxIsaLFixgzatzIsaPHjyBDihxJsqTJkygvMgjAsqXLlzBjypxJs6bNmzhz6tzJsyfNlECDCh1KtKjR
        o0iTKl3KtKnTpwoPNIBKtarVq1izat3KtavXr2DDcjXAQKzZs2jTql3Ltq3bt3DjOmRgQK7du3jz6t3L
        t6/fvykbHABMuLDhw4gTK17MeCOBso0jS55MubLly5iB1gWM4IGABXw7f85M2uxKn6hT8/x7WrXr1zIB
        t4ZNG3bfzrIHA1ggQC8D3bxLC/e6wMHwp8WPIzeuXOmCBJwHCDxQQC8C6QCoN98OlS53pd6/J0sNL75o
        dcLQAQggsDf9+oi/HeouT5+hAAQj43ucP1A0aMD35ccfRwMC4B9hAYqkX0cFHugXAr0VtGBIExJokIPZ
        JTRAehlVmFSBA23/GNECkDHEwH9GMcChbyvGpaJH5IVE4kcnEqRfcFm9yFGMIM1II4oA3BjhVTruuJlI
        PnZU40BCalVkRskVlKSMJSoJZJNBAjkQAfhtNOVCXZq0ZEFcGiTAAAEQMORAD4TZkGAwGsDcQA08cECb
        BTlgQAAt2ofmAlMJhEAACqxZ0Z0LGOBmnXe6KdCZaRqKkJ58HoWoogQximdBkKrZEKV9XvRAoALRNWdG
        m2angJoCKFDoegpo+eZ81013HkaXLmpnqgN1KulBoHI0qo1yChvmAasK0OqrBMQ6EZyCYqcdrg8kqmuj
        ZqLpKUPBCktqkMVulCqyrLqqbLOyMgStgdLe/2pRrpnu6qh62v4K7J6hUuSuQLyCeypG4ya77LnOSrRu
        rdndui6/xuUrEa/wSvitQeQqay6s6ao74AMNG1TAkQXt25DIFiUgwAEBuInAkQX8C0ClERXAHkEHgGiQ
        Aw5PB1kCAQS68kAtewxyQzCHhPNCB+zcs6Asu/xxREVrdKvJKM8LbM5AE/TYQIX2Z/NC7ro3s0JHR6W0
        z00LDTXWMQ9Edcqfsg2Au1sL1LWgX4NNkNgLlZ1Q0gLxjDbQTg/NUNQZTX0y3NzKTXeJdxuYd0JhPzp2
        Qn4fBDgAgjNNuNpra+SArGEvbnVFj3M9JAKTU7635QS520ADKj7Qt+M0n/9tYwMINJBv3QBEzrq+mdKe
        gO0FBQDiwg7Z6RHjAhlA6gGXC4Q40fw9IHd2p4c4JwHYST8Q9QYpH7pIB3Qv0ADfhz999S+3nvz2zU/8
        svrj4w/AugmQynOYDtDfQZxXEBEhDX/s25L7xgc/80HkehUZVvIEmD6Nuc1/0AsgRQhIEAP+DYHti977
        yic/gkAwgvaDXlT0xz8MAlCABuFgiNhWQQ2FEADim04DS2hC+i0kQXQCkQov0kK3ZRCGMSyQBwFAQJ61
        xF75s6D3FDgQBxSgSgbpnxFfuEHdOJElhhpUqAzgQ4Ho6XluCsCcEKCA8pVRjIHjIfcWooD5CCAA1lv/
        YxsJAscHllEiNUxIHXuFx5fpsSB9fMgJiVc+CuqPjHSiWSEFhUWHnFFrjqSjHQupxv7ssT+LREgo29bI
        hgQyIZAUyLdQxsdKWnJoZTqgJgmZR08icpRu5AjJhoiQUyIklfuTZCsncsktZVKQm6yloD4pKFzmMnEG
        AaYJkcgQYK5ykgZy5adg6ahiQsSXB5HmIB81yQEgLyHXHCYxDXeQViGEmQBwgP3eQxB4ZgR6POOQAwKA
        xaIt4E4PCOg5CeLO7NhPlg8BH+eKts8qFdSPA/mnQANKEHmaCX4FAadCFJrPKvKToPY8HIckOtGI1Owg
        vNSc/kIqEAKQLE/zvBwz/znGOYZoNCEcZehHe8VShfgToAL9phCPqZCeupRbMS3ITDu2QojkVJ87fVRP
        E/LTiQ7UlEM15Upx+tIqJrWeBKEpDZH4VI86dKpUHSlQKeqQBMCPpSmliFG76tWLKjWsTOXaRG4KVpxi
        ZyUu2yhdzfhVvTKkABmD568asC9saiSDOm0RzLa1ANuFCrFMdOBD+GqQlUxln1BdEWbPR1nLEvQgjEVo
        Qzwbz8jGLmM+TU9pawqRl8Y1o1t951XbiVp3TXJ2tbMpElkLWo+KFrZpbWmEKktbh9iWqIIU5G7N1Nvk
        0cl406XZcJdWXDNGbbQQBcBsy/hcrTKkpwrIbq+qa//C6wZXtQshrmuBhtzkine5ps0TO/sVPFFSk47S
        tQ97B/Jb7FoXkLk9CGsFUoCDBviHA7aeiZaWRewELkwr0tIAXLkAAnj4wyCG4v2MS+Ierk83D3jpSk6G
        QwvLB4kGQF53W8uhBedpVyhNzwBQvK8EYJgg9eVsQWLs3dAyicJZZOfLdMzjhDBgunXyr3kVkgAX762T
        ewOZj90G5A6W5YsBEPF0YCzj+QYJyXz0TLpgtmN+qRjK2b2tdhdSZYTw7FQY2nLguuzlhT4RvgshMo1L
        fOaDzq5aOT6xm50MZykLl85WNuKpDv0fPTd3NwX8skvEPMeGCHrGM7bxQTC6ZEX/M5FkdInqQAxXZ5T+
        NyGtziKWyeS2H0c0034GI65Nir9YR3OgEOodFuF351HXmsu37rNCGqDqmvr6WyAb0IY7gs9ZD6qf6XnA
        zAxgM2Z3aVD46/CHCyCzD0ORrQtdY1SZjUXonOek8+PXtgcEbZoZRNweJneIE4LuYjezROwuCHQOcCZR
        ZnvekyJAs+dG1dPh26Xl9rCkfB1WxxLcxfUen7IZ8nB9m5vf5/S3gdbd7ARgycRMRPjNFF7Jrsa14xHf
        1t4izS9sYinj09n1QmC+b4T029okb/fLolcgmGmb6AlfuMsdDmKPS7zCPndsIbkdzFXbe+M7b3rM7fVz
        dQO8/+Rssu3BkU6xztmI2DQf8b0MwPa2t323FGeTYxetSoJEW+ca0qaUtN7zmft8oLPzucgeMPdTR9Lq
        Gsf6QRZgZQcYhwHMnI/J6IRFtE5EhdBrgD1h1ruAdo/xHVRyLwUY5WnSiZmgr2gAZ+ZN66Wn8/yV/JBo
        B2iElJ7AYdI8kBvPnLi7XlB14m8VX2ao25fy0QqB/C9Z7WLZU76vCH7TVTOPet4jbFooh/3pjBPmghh/
        glN2MkvZzsd25Txws6/8Xkk//dxXP09MFXT2g9897hdfvXKOYvLHP7T0ENn5qqR+66cu7Xd6uwd/hCV2
        wOd5RVU9UtFZcPVqCKF84WQ48vx0KwC4PwIIYNG3f6g1UGMCUyJDfiKYeJyTfne1EAOgJSjCTGODIyFo
        NwjxcCD2dA1nd/NxdPHGRA2xgpJEP0ImOWxCdinXQSxYhJyzedm2UREVITGoUgwxPPxChDq4PkcYOGln
        dA/xUNGjd/k3ZuclSnDnYi/ohFpieaMXhTlIhZfjg3zGNzuoXpwCT2Rxg8hXVGIocLAjXk1YKrKChhSj
        P1LIgziUg214haVyRc8kh3M4ZF4IXe+Uh52liGXohwYBiIEIJmtYiGxyiFIyPgyggITIcXToShG4EXC1
        W0lzK5WYJZfYEJg4ZxzIR2soQRQTiuWjirjYUn3oiin/6GRoxlzRwyFqggBqMgC8UwAt0nr3pDIs0ydG
        52BGNDEFE36TsgAIkI0N8B8/w2A1Foy2g2gLtYjSWIzHmIxj1TfYqI3c+IxH9i3CyDlZmG3SKHCaBSE+
        BYnh1Cf75DK+Zo5ngo4VJXq1lyfr2DvtCDTfCI9XtUS/x0T1aES0ImJf2GkKIU3eFVgAYEAAiYwIoIz6
        NYBkc5Db6Dne+I5Adk4NkENxGJES2R8UqY/RxI+zRic51JECOZAUwVmjk40IaZJzs5ApmXO7SI4NMShz
        wiOrFioV6RAY2Vr/MhhFiZMfuYwEaUZXmYaBtiI9yY7qkS5SuS/9mFFBwor3cY5V/xmSCSEABRApAmAA
        ChBV8CaP6aUqAzAvtogRDPCWAVAAAjAnddIAQGRGCocpYFYAA8KWAcCSdxQAX6KVgvQSYxOYQKSYrAKX
        H6WDDsBMDlCY+HGY/FFldYksd2mNBxGXLjGZo1KZbXmZcVkicdeZi/mZLoGYF2lhddhZfOmXGql/UZE9
        jLeYArAiviaatkOajpKX34Q/qNkSqimYYWKZyoKZVRJLVeSZudaXX2MAuOlKe7knvFmQGQWcaGIAw0km
        GDYAo6kApVkQyvlidCSZdLKa0dma0/maZDJQsmmYtZk33Llq3rmbfymeNEOewtknBGBZ6nmc7ImXLgmZ
        pymfqv9En71in2+Jn1tWlNc5m9lpm5K4PzYzl0EioL0pVGEVnOaZHhk6NQtqlw7KEO9pmprDH83JEuyx
        T+FyYWXJJih6npyDH0VpnC4aQw+afFnpMUvRmenBAA7QnhzRACXqEd3YjcBCAEvapBJoEFAKFL5XUVZa
        KliaEEgZT/X1EFsaX0eKhRIxWMsWpR8hVpjzpUESpgcxpqOjEWdqpA8Bp7VFEXlaEtNyAGkXT3LKpE56
        IZ10pxnxpxN4pIE6qAfBpujkphsBUK0ih0oKpodqd6yoTUoZJ6YUUJdKSnrzLG76qUkWAG2WHaJal1HR
        qoyIpBgxoA8xiEhRkpgkFuchQ97/pyXWuRVdSie+qj4DwB65eRK0yhDBihC2WhXAdTzoNKwaYqx6BxLJ
        umwGVqtyRBRSSE+oJa3TikPV+hHXyqy64a1qqBVWtBC4akxRBxkEWa7kSqlmJKm0mK4iIa921ipAsq6W
        ZK9eoxFlyiQDCxSMcieD+RUQQnDsaicIm6VHgQALEADas2wO6xn4gzLtihIDK7EUuz1PCBVgJmIHi7FR
        0TMF2xFlOrIPEbJPgbCPGS81Y7Inu7EnMbAwO64Eq64Kx4glm7BXNhW4oRApaxEFK5uxurPxVbQVUbQS
        u6FJi7Qty7TJV0KbUx/0wRJ/1CHbKh86KxdaGxQeohFX6xdhawsUY4srXwsXq7IbWJO2O9K1XmtTa6sS
        8iMVz3ESZYu1fIuspNa3JIGugIsSgju4JLEAbZSmhru4jNu4jvu4kLsUg+IZkVu5lnu5mJu5mnt5Nbm5
        nvu5oBu6oqsccDm6pnu6qJu6qqsXlLu6DK77urAbu7I7u4AREAA7
</value>
  </data>
</root>