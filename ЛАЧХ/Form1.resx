<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        L507tgEBADs=
</value>
  </data>
</root>